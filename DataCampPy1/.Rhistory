View(r)
3+4
3+4
# ==== Set Working Dir ====
dir = "F:/helloajk/OneDrive/ajkdrive/codeLab/WsDataCampR/"
setwd(dir)
# === Set Working Dir ===
dir = ""
setwd(dir)
getwd()
# === Set Working Dir ===
dir = "/Users/ajk/Library/CloudStorage/OneDrive-Personal/ajkdrive/codeLab/WsPy1/DataCampPy1"
setwd(dir)
getwd()
# ==== Data Camp course track - Data Scientist with R ====
# ==== Introduction to R ====
# ==== Intro to basics ====
# ==== An addition ====
5 + 5
# ==== A subtraction ====
5 - 5
# ==== A multiplication ====
3 * 5
# === A division ===
(5 + 5) / 2
# ==== Assignment in R ====
assign("my_apples", 6)
my_apples
## Print out the value of the variable my_apples
my_apples
## Assign a value to the variables my_apples and my_oranges
my_apples <- 5
my_oranges <- 6
## Add these two variables together
my_apples + my_oranges
## Create the variable my_fruit
my_fruit <- (my_apples + my_oranges)
## Assign a value to the variable my_apples
my_apples <- 5
## Fix the assignment of my_oranges
my_oranges <- 6
## Create the variable my_fruit and print it out
my_fruit <- my_apples + my_oranges
my_fruit
## Change my_numeric to be 42
my_numeric <- 42
## Change my_character to be "universe"
my_character <- "universe"
## Change my_logical to be FALSE
my_logical <- FALSE
## Declare variables of different types
my_numeric <- 42
my_character <- "universe"
my_logical <- FALSE
## Check class of my_numeric
class(my_numeric)
## Check class of my_character
class(my_character)
## Check class of my_logical
class(my_logical)
# ==== Vector ====
## Define the variable vegas
vegas <- "Go!"
vegas
numeric_vector <- c(1, 10, 49)
# ==== Vector ====
## Define the variable vegas
vegas <- "Go!"
vegas
numeric_vector <- c(1, 10, 49)
numeric_vector
character_vector <- c("a", "b", "c")
character_vector
## Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
boolean_vector
## Poker winnings from Monday to Friday
poker_vector <- c(140,-50, 20,-120, 240)
poker_vector
## Roulette winnings from Monday to Friday
roulette_vector <- c(-24,-50, 100,-350, 10)
roulette_vector
## Poker winnings from Monday to Friday
poker_vector <- c(140,-50, 20,-120, 240)
## Roulette winnings from Monday to Friday
roulette_vector <- c(-24,-50, 100,-350, 10)
## Assign days as names of poker_vector
names(poker_vector) <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
poker_vector
## Assign days as names of roulette_vectors
names(roulette_vector) <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
roulette_vector
## Poker winnings from Monday to Friday
poker_vector <- c(140,-50, 20,-120, 240)
## Roulette winnings from Monday to Friday
roulette_vector <- c(-24,-50, 100,-350, 10)
## The variable days_vector
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
days_vector
## Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
poker_vector
names(roulette_vector) <- days_vector
roulette_vector
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
## Take the sum of A_vector and B_vector
total_vector <- A_vector + B_vector
## Print out total_vector
total_vector
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Total winnings with poker
total_poker <- sum(poker_vector)
total_poker
## Total winnings with roulette
total_roulette <-  sum(roulette_vector)
total_roulette
## Total winnings overall
total_week <- total_poker + total_roulette
total_week
## Print out total_week
total_week
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Calculate total gains for poker and roulette
total_poker <- sum(poker_vector)
total_poker
total_roulette <- sum(roulette_vector)
total_roulette
## Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Define a new variable based on a selection
poker_wednesday <- poker_vector[3]
poker_wednesday
## Define a new variable based on a selection
poker_wednesday <- poker_vector[3]
poker_wednesday
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Define a new variable based on a selection
poker_midweek <- poker_vector[c(2, 3, 4)]
poker_midweek
roulette_selection_vector <- roulette_vector[2:5]
roulette_selection_vector
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Select poker results for Monday, Tuesday and Wednesday
poker_start <- poker_vector[c("Monday", "Tuesday", "Wednesday")]
poker_start
## Calculate the average of the elements in poker_start
mean(poker_start)
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Which days did you make money on poker?
selection_vector <- poker_vector[1:5] > 0
poker_vector
poker_vector[1:5]
selection_vector
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Which days did you make money on poker?
selection_vector <- poker_vector > 0
## Select from poker_vector these days
poker_winning_days <- poker_vector[selection_vector]
poker_winning_days
## Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140,-50, 20,-120, 240)
roulette_vector <- c(-24,-50, 100,-350, 10)
days_vector <-
c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
## Which days did you make money on roulette?
selection_vector <- roulette_vector > 0
selection_vector
## Select from roulette_vector these days
roulette_winning_days <- roulette_vector[selection_vector]
roulette_winning_days
roulette_winning_days
# ==== Matrix ====
## Construct a matrix with 3 rows that contain the numbers 1 up to 9
matrix(1:9, byrow = TRUE)
roulette_winning_days
# ==== Matrix ====
## Construct a matrix with 3 rows that contain the numbers 1 up to 9
matrix(1:9, byrow = TRUE)
matrix(1:9, byrow = TRUE, nrow = 3)
matrix(1:9,  nrow = 3) #by default it is column based
## Box office Star Wars (in millions!)
new_hope <- c(460.998, 314.4)
new_hope
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)
## Create box_office
box_office <- c(new_hope, empire_strikes, return_jedi)
box_office
## Construct star_wars_matrix
star_wars_matrix <- matrix(box_office, nrow = 3, byrow = TRUE)
star_wars_matrix
## Box office Star Wars (in millions!)
new_hope <- c(460.998, 314.4)
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)
## Construct matrix
star_wars_matrix <-
matrix(
data = c(new_hope, empire_strikes, return_jedi),
nrow = 3,
byrow = TRUE
)
data = c(new_hope, empire_strikes, return_jedi)
data
## Construct matrix
star_wars_matrix <-
matrix(
data = c(new_hope, empire_strikes, return_jedi),
nrow = 3,
byrow = TRUE
)
star_wars_matrix
## Vectors region and titles, used for naming
region <- c("US", "non-US")
titles <-
c("A New Hope", "The Empire Strikes Back", "Return of the Jedi")
star_wars_matrix
colnames(star_wars_matrix) <- region
star_wars_matrix
star_wars_matrix
star_wars_matrix
## Name the rows with titles
rownames(star_wars_matrix) <- titles
star_wars_matrix
## Construct star_wars_matrix
box_office <- c(460.998, 314.4, 290.475, 247.900, 309.306, 165.8)
star_wars_matrix <- matrix(
box_office,
nrow = 3,
byrow = TRUE,
dimnames = list(
c("A New Hope", "The Empire Strikes Back", "Return of the Jedi"),
c("US", "non-US")
)
)
star_wars_matrix
## Calculate worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
worldwide_vector
## Construct star_wars_matrix
box_office <- c(460.998, 314.4, 290.475, 247.900, 309.306, 165.8)
star_wars_matrix <- matrix(
box_office,
nrow = 3,
byrow = TRUE,
dimnames = list(
c("A New Hope", "The Empire Strikes Back", "Return of the Jedi"),
c("US", "non-US")
)
)
dimnames = list(
c("A New Hope", "The Empire Strikes Back", "Return of the Jedi"),
c("US", "non-US")
)
dimnames
box_office
box_office
box_office
box_office
star_wars_matrix <- matrix(
box_office,
nrow = 3,
byrow = TRUE,
dimnames = list(
c("A New Hope", "The Empire Strikes Back", "Return of the Jedi"),
c("US", "non-US")
)
)
star_wars_matrix
worldwide_vector
## The worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
worldwide_vector
star_wars_matrix
star_wars_matrix
worldwide_vector
## Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
star_wars_matrix
## Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
all_wars_matrix
## star_wars_matrix and star_wars_matrix2 are available in your workspace
star_wars_matrix
box_office2 <- c(474.5, 310.7, 380.3, 552.5, 338.7, 468.5)
star_wars_matrix2 <- matrix(
box_office2,
nrow = 3,
byrow = TRUE,
dimnames = list(
c("The Phantom Menace", "Attack of the Clones", "Revenge of the Sith"),
c("US", "non-US")
)
)
star_wars_matrix2
## Combine both Star Wars trilogies in one matrix
all_wars_matrix <- rbind(star_wars_matrix, star_wars_matrix2)
all_wars_matrix
## Total revenue for US and non-US
total_revenue_vector <- colSums(all_wars_matrix)
total_revenue_vector
## all_wars_matrix is available in your workspace
all_wars_matrix
## Select the non-US revenue for all movies
non_us_all <- all_wars_matrix[, 2]
non_us_all
## Average non-US revenue
mean(non_us_all)
## Select the non-US revenue for first two movies
non_us_some <- all_wars_matrix[1:2, 2]
non_us_some
## Average non-US revenue for first two movies
mean(non_us_some)
## all_wars_matrix is available in your workspace
all_wars_matrix
## Estimate the visitors
visitors <- all_wars_matrix / 5
visitors
## all_wars_matrix and ticket_prices_matrix are available in your work space
all_wars_matrix
ticket_prices_matrix <-
matrix(
c(5, 5, 6, 6, 7, 7, 4, 4, 4.5, 4.5, 4.9, 4.9),
nrow = 6,
ncol = 2,
byrow = TRUE,
dimnames = list(
c(
"A New Hope",
"The Empire Strikes Back",
"Return of the Jedi",
"The Phantom Menace",
"Attack of the Clones",
"Revenge of the Sith"
),
c("US", "non-US")
)
)
ticket_prices_matrix
## Estimated number of visitors
visitors <- all_wars_matrix / ticket_prices_matrix
visitors
## US visitors
us_visitors <- visitors[, 1]
us_visitors
## Average number of US visitors
mean(us_visitors)
# ==== Factors  ====
## Assign to the variable theory what this chapter is about!
theory <- "factors for categorical variables"
theory
## Gender vector
gender_vector <- c("Male", "Female", "Female", "Male", "Male")
## Convert gender_vector to a factor
factor_gender_vector <- factor(gender_vector)
